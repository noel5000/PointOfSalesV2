// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace PointOfSalesV2.EntityFramework.Migrations
{
    [DbContext(typeof(MainDataContext))]
    [Migration("20191230210906_FixTranslation")]
    partial class FixTranslation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PointOfSalesV2.Entities.BranchOffice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BranchOffices");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CashRegister", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("CashRegisters");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CashRegisterOpening", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("CashRegisterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ClosureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClosureDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MaxClosureDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpeningClosureDifference")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpeningDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("TotalClosureAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalOpeningAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPaymentsAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CashRegisterId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("LocationId");

                    b.ToTable("CashRegisterOpenings");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CompositeProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("BaseProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BaseProductUnitId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("BaseProductUnitId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductId");

                    b.ToTable("CompositeProducts");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CreditNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("Applied")
                        .HasColumnType("bit");

                    b.Property<string>("AppliedInvoiceNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginInvoiceNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Sequence")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CreditNotes");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsLocalCurrency")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long?>("AssignedWarehouseId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BillingAmountLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditAmountLimit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("InvoiceDueDays")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("TRNControlId")
                        .HasColumnType("bigint");

                    b.Property<string>("TRNType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssignedWarehouseId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("TRNControlId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerBalance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OwedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomersBalance");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CheckbookNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("InvoiceCurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OutstandingAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("PaymentTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SellerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SellerRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Sequence")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceCurrencyId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("SellerId");

                    b.ToTable("CustomersPayments");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerReturn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("CustomersReturns");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerReturnDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerReturnId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Defective")
                        .HasColumnType("bit");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("TaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerReturnId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("CustomersReturnDetails");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("BeforeTaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("BranchOfficeId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ExpenseReference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("GivenAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OwedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("PaymentTypeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ReturnedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<string>("TRN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("TaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.ExpenseTax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExpenseId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("TaxId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("TaxId");

                    b.ToTable("ExpenseTaxes");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.ExpensesPayment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("ExpenseCurrencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ExpenseReference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OutstandingAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("PaymentTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Sequence")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ExpenseCurrencyId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ExpensesPayments");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Inventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("BranchOfficeId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.InventoryEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventoryEntries");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("AppliedCreditNoteAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BeforeTaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("BranchOfficeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashRegisterId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NRC")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("OwedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ReceivedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ReturnedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("SellerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SellerRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TRN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("TRNControlId")
                        .HasColumnType("bigint");

                    b.Property<string>("TRNType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<decimal>("TaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.Property<long>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SellerId");

                    b.HasIndex("TRNControlId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.InvoiceDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BeforeTaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditNoteAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Free")
                        .HasColumnType("bit");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PrincipalCurrencyAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SellerRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long?>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("InvoicesDetails");

                    b.HasDiscriminator<string>("Discriminator").HasValue("InvoiceDetail");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.InvoiceTax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("TaxId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TaxId");

                    b.ToTable("InvoicesTaxes");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Language", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code")
                        .HasName("Code");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Code = "EN",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(2858),
                            Id = 1L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"ENGLISH\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"ENGLISH\"}]}]"
                        },
                        new
                        {
                            Code = "ES",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(3863),
                            Id = 2L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"SPANISH\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"SPANISH\"}]}]"
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.LanguageKey", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageCode", "Key");

                    b.ToTable("LanguageKeys");

                    b.HasData(
                        new
                        {
                            LanguageCode = "EN",
                            Key = "unitNotExist_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(5956),
                            LanguageId = 1L,
                            Value = "Unit does not exist."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "parentUnitDoesntExist_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9547),
                            LanguageId = 1L,
                            Value = "Parent unit does not exist."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "ok_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9660),
                            LanguageId = 1L,
                            Value = "Operation completed successfully."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "error_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9665),
                            LanguageId = 1L,
                            Value = "Error: Could not completed the current operation. "
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "cannotUpdatePayment_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9668),
                            LanguageId = 1L,
                            Value = "Cannot update payment. "
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "invalidInvoice_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9697),
                            LanguageId = 1L,
                            Value = "Invalid invoice."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "owedAmountOutdated_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9700),
                            LanguageId = 1L,
                            Value = "Owed amount is outdated. please try update and try again."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "invoicePaid_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9704),
                            LanguageId = 1L,
                            Value = "Invoice is already paid."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "paymentNotValid_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9707),
                            LanguageId = 1L,
                            Value = "Payment is not valid."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "emptyInvoice_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9712),
                            LanguageId = 1L,
                            Value = "Invoice doesn't have any details. Cannot be empty."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "creditLimitReached_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9715),
                            LanguageId = 1L,
                            Value = "Credit limit reached. Cannot continue."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "trnNotAvailable_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9720),
                            LanguageId = 1L,
                            Value = "TRN is not available."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "outOfStock_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9723),
                            LanguageId = 1L,
                            Value = "Product is out of stock."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "defWarehouseNotExit_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9726),
                            LanguageId = 1L,
                            Value = "Defective warehouse does not exist. Please create one with 'DEF' as code first. "
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "notExistingClass_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9729),
                            LanguageId = 1L,
                            Value = "Cannot process this product/Service. Class does not exist."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "warehouseError_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9733),
                            LanguageId = 1L,
                            Value = "Warehouse does not exist."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "creditNoteNotExist_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9737),
                            LanguageId = 1L,
                            Value = "Credit note does not exist. "
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "creditNoteApplied_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9742),
                            LanguageId = 1L,
                            Value = "Credit note is already applied."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "differentCurrency_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9745),
                            LanguageId = 1L,
                            Value = "Currencies are different. You can only apply the same currency. "
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "amountIsGreater_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9749),
                            LanguageId = 1L,
                            Value = "Credit note amount is greater than invoice amount."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "productNeedsUnits_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9752),
                            LanguageId = 1L,
                            Value = "Product needs at least one unit."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "productNeedsPrimaryUnit_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9755),
                            LanguageId = 1L,
                            Value = "Product needs one primary unit."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "cannotEraseUnit_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9758),
                            LanguageId = 1L,
                            Value = "Cannot erase product unit."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "cannotDeleteTax_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9764),
                            LanguageId = 1L,
                            Value = "Cannot delete product tax. "
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "cannotRemoveBaseProduct_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9767),
                            LanguageId = 1L,
                            Value = "Cannot remove base product."
                        },
                        new
                        {
                            LanguageCode = "EN",
                            Key = "sequenceError_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 468, DateTimeKind.Local).AddTicks(9770),
                            LanguageId = 1L,
                            Value = "Sequence Error."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "unitNotExist_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(67),
                            LanguageId = 2L,
                            Value = "Unit does not exist."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "parentUnitDoesntExist_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(74),
                            LanguageId = 2L,
                            Value = "Parent unit does not exist."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "ok_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(76),
                            LanguageId = 2L,
                            Value = "Operation completed successfully."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "error_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(79),
                            LanguageId = 2L,
                            Value = "Error: Could not completed the current operation. "
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "cannotUpdatePayment_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(81),
                            LanguageId = 2L,
                            Value = "Cannot update payment. "
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "invalidInvoice_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(85),
                            LanguageId = 2L,
                            Value = "Invalid invoice."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "owedAmountOutdated_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(88),
                            LanguageId = 2L,
                            Value = "Owed amount is outdated. please try update and try again."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "invoicePaid_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(90),
                            LanguageId = 2L,
                            Value = "Invoice is already paid."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "paymentNotValid_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(93),
                            LanguageId = 2L,
                            Value = "Payment is not valid."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "emptyInvoice_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(97),
                            LanguageId = 2L,
                            Value = "Invoice doesn't have any details. Cannot be empty."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "creditLimitReached_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(100),
                            LanguageId = 2L,
                            Value = "Credit limit reached. Cannot continue."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "trnNotAvailable_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(103),
                            LanguageId = 2L,
                            Value = "TRN is not available."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "outOfStock_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(105),
                            LanguageId = 2L,
                            Value = "Product is out of stock."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "defWarehouseNotExit_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(108),
                            LanguageId = 2L,
                            Value = "Defective warehouse does not exist. Please create one with 'DEF' as code first. "
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "notExistingClass_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(110),
                            LanguageId = 2L,
                            Value = "Cannot process this product/Service. Class does not exist."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "warehouseError_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(113),
                            LanguageId = 2L,
                            Value = "Warehouse does not exist."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "creditNoteNotExist_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(116),
                            LanguageId = 2L,
                            Value = "Credit note does not exist. "
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "creditNoteApplied_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(120),
                            LanguageId = 2L,
                            Value = "Credit note is already applied."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "differentCurrency_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(122),
                            LanguageId = 2L,
                            Value = "Currencies are different. You can only apply the same currency. "
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "amountIsGreater_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(125),
                            LanguageId = 2L,
                            Value = "Credit note amount is greater than invoice amount."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "productNeedsUnits_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(128),
                            LanguageId = 2L,
                            Value = "Product needs at least one unit."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "productNeedsPrimaryUnit_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(139),
                            LanguageId = 2L,
                            Value = "Product needs one primary unit."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "cannotEraseUnit_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(141),
                            LanguageId = 2L,
                            Value = "Cannot erase product unit."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "cannotDeleteTax_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(144),
                            LanguageId = 2L,
                            Value = "Cannot delete product tax. "
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "cannotRemoveBaseProduct_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(147),
                            LanguageId = 2L,
                            Value = "Cannot remove base product."
                        },
                        new
                        {
                            LanguageCode = "ES",
                            Key = "sequenceError_msg",
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 469, DateTimeKind.Local).AddTicks(149),
                            LanguageId = 2L,
                            Value = "Sequence Error."
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.MovementType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<short>("Code")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovementTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Code = (short)1,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 445, DateTimeKind.Local).AddTicks(8875),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"IN\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"IN\"}]}]"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Code = (short)2,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 445, DateTimeKind.Local).AddTicks(9009),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"OUT\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"OUT\"}]}]"
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.OpeningAmount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("OpeningsAmounts");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Operation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Operations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 436, DateTimeKind.Local).AddTicks(3100),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"READ\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"READ\"}]}]"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 441, DateTimeKind.Local).AddTicks(163),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"ADD\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"ADD\"}]}]"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 441, DateTimeKind.Local).AddTicks(309),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"UPDATE\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"UPDATE\"}]}]"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 441, DateTimeKind.Local).AddTicks(333),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"DELETE\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"DELETE\"}]}]"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 441, DateTimeKind.Local).AddTicks(352),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"READALL\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"READALL\"}]}]"
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 441, DateTimeKind.Local).AddTicks(388),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"READPAGED\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"READPAGED\"}]}]"
                        },
                        new
                        {
                            Id = 7L,
                            Active = true,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 441, DateTimeKind.Local).AddTicks(408),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"ALL\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"ALL\"}]}]"
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.PaymentDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OwedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("PaymentId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.PaymentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<short>("Code")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Code = (short)1,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 442, DateTimeKind.Local).AddTicks(7050),
                            Name = "CASH",
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CASH\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CASH\"}]}]"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Code = (short)2,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 442, DateTimeKind.Local).AddTicks(7191),
                            Name = "CHECK",
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CHECK\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CHECK\"}]}]"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Code = (short)3,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 442, DateTimeKind.Local).AddTicks(7214),
                            Name = "CREDITCARD",
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CREDITCARD\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CREDITCARD\"}]}]"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Code = (short)4,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 442, DateTimeKind.Local).AddTicks(7234),
                            Name = "BANKTRANSFER",
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"BANKTRANSFER\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"BANKTRANSFER\"}]}]"
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Existence")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsCompositeProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("IsService")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Price2")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Price3")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SellerRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.ProductTax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TaxId");

                    b.ToTable("ProductTaxes");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.RoleSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("SectionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("SectionId");

                    b.ToTable("RoleSections");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Section", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Controllers")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Controllers = "User,UserClaims,Role,RoleSection,Section,SectionOperation",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(2420),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Permissions\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Permissions\"}]}]"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Controllers = "Customer,CustomerRate",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6588),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomerRates\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomerRates\"}]}]"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Controllers = "Product,ProductTax",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6694),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Products\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Products\"}]}]"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Controllers = "Customer,CustomerPayment",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6754),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomerPayments\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomerPayments\"}]}]"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Controllers = "Currency",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6817),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Currencies\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Currencies\"}]}]"
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            Controllers = "Taxe",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6883),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Taxes\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Taxes\"}]}]"
                        },
                        new
                        {
                            Id = 7L,
                            Active = true,
                            Controllers = "Invoice,InvoiceDetail,TRNControl,Unit,UnitProductEquivalence,Seller,BranchOffice,Warehouse,CreditNote,Currency,Customer,Inventory,PaymentType",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6944),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Invoices\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Invoices\"}]}]"
                        },
                        new
                        {
                            Id = 8L,
                            Active = true,
                            Controllers = "Invoice,InvoiceDetail,Unit,UnitProductEquivalence,Seller,Currency,Customer",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7001),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Quotes\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Quotes\"}]}]"
                        },
                        new
                        {
                            Id = 9L,
                            Active = true,
                            Controllers = "Customer,BranchOffice,Warehouse,TRNControl,Zone",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7054),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Customers\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Customers\"}]}]"
                        },
                        new
                        {
                            Id = 10L,
                            Active = true,
                            Controllers = "BranchOffice,Warehouse",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7118),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Warehouses\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Warehouses\"}]}]"
                        },
                        new
                        {
                            Id = 11L,
                            Active = true,
                            Controllers = "*",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7182),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"All\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"All\"}]}]"
                        },
                        new
                        {
                            Id = 12L,
                            Active = true,
                            Controllers = "Inventory,Product,BranchOffice,Warehouse,Supplier",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7239),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Inventories\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Inventories\"}]}]"
                        },
                        new
                        {
                            Id = 13L,
                            Active = true,
                            Controllers = "TRNControl",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7293),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"TRNControl\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"TRNControl\"}]}]"
                        },
                        new
                        {
                            Id = 14L,
                            Active = true,
                            Controllers = "Supplier,Expense,Tax,ExpenseTax,Currency",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7352),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Expenses\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Expenses\"}]}]"
                        },
                        new
                        {
                            Id = 15L,
                            Active = true,
                            Controllers = "BranchOffice,Warehouse",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7408),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"BranchOffices\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"BranchOffices\"}]}]"
                        },
                        new
                        {
                            Id = 16L,
                            Active = true,
                            Controllers = "Supplier,BranchOffice,User,Currency,Tax",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7468),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"ExpensesPayments\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"ExpensesPayments\"}]}]"
                        },
                        new
                        {
                            Id = 17L,
                            Active = true,
                            Controllers = "Supplier",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7524),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Suppliers\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Suppliers\"}]}]"
                        },
                        new
                        {
                            Id = 18L,
                            Active = true,
                            Controllers = "Unit",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7585),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Units\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Units\"}]}]"
                        },
                        new
                        {
                            Id = 19L,
                            Active = true,
                            Controllers = "User,BranchOffice,Warehouse,CashRegister",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7823),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Users\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Users\"}]}]"
                        },
                        new
                        {
                            Id = 20L,
                            Active = true,
                            Controllers = "PaymentType",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7889),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"PaymentTypes\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"PaymentTypes\"}]}]"
                        },
                        new
                        {
                            Id = 21L,
                            Active = true,
                            Controllers = "CashRegister,BranchOffice",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8099),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CashRegisters\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CashRegisters\"}]}]"
                        },
                        new
                        {
                            Id = 22L,
                            Active = true,
                            Controllers = "CashRegister,User,CashRegisterOpening",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8349),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CashRegisterOpenings\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CashRegisterOpenings\"}]}]"
                        },
                        new
                        {
                            Id = 23L,
                            Active = true,
                            Controllers = "CashRegister,User,CashRegisterOpening",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8405),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CashRegisterOpeningsAmounts\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CashRegisterOpeningsAmounts\"}]}]"
                        },
                        new
                        {
                            Id = 24L,
                            Active = true,
                            Controllers = "Supplier,Product,Tax,User",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8462),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"IncomeMovements\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"IncomeMovements\"}]}]"
                        },
                        new
                        {
                            Id = 25L,
                            Active = true,
                            Controllers = "Invoice,Product,InvoiceDetail,Customer",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8525),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomersReturns\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomersReturns\"}]}]"
                        },
                        new
                        {
                            Id = 26L,
                            Active = true,
                            Controllers = "Supplier,Expense,Tax,Currency",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8582),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"SuppliersReturns\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"SuppliersReturns\"}]}]"
                        },
                        new
                        {
                            Id = 27L,
                            Active = true,
                            Controllers = "BranchOffice,Warehouse,User,Product,Unit",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8647),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"WarehouseTransfers\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"WarehouseTransfers\"}]}]"
                        },
                        new
                        {
                            Id = 28L,
                            Active = true,
                            Controllers = "Product,Unit,",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8703),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"ProductUnits\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"ProductUnits\"}]}]"
                        },
                        new
                        {
                            Id = 29L,
                            Active = true,
                            Controllers = "Role",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9025),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Roles\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Roles\"}]}]"
                        },
                        new
                        {
                            Id = 30L,
                            Active = true,
                            Controllers = "Section",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9085),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Sections\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Sections\"}]}]"
                        },
                        new
                        {
                            Id = 31L,
                            Active = true,
                            Controllers = "Operation",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9138),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Operations\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Operations\"}]}]"
                        },
                        new
                        {
                            Id = 32L,
                            Active = true,
                            Controllers = "",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9199),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Menu\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Menu\"}]}]"
                        },
                        new
                        {
                            Id = 33L,
                            Active = true,
                            Controllers = "Seller,Zone,BranchOffice",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9378),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Sellers\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Sellers\"}]}]"
                        },
                        new
                        {
                            Id = 34L,
                            Active = true,
                            Controllers = "",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9440),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Zones\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Zones\"}]}]"
                        },
                        new
                        {
                            Id = 35L,
                            Active = true,
                            Controllers = "Users,Role,UserRole",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9489),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"UserRoles\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"UserRoles\"}]}]"
                        },
                        new
                        {
                            Id = 36L,
                            Active = true,
                            Controllers = "",
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9546),
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"WarehouseMovements\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"WarehouseMovements\"}]}]"
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.SectionOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SectionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperationId");

                    b.HasIndex("SectionId");

                    b.ToTable("SectionOperations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(3516),
                            OperationId = 1L,
                            SectionId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6465),
                            OperationId = 2L,
                            SectionId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6502),
                            OperationId = 3L,
                            SectionId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6506),
                            OperationId = 4L,
                            SectionId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6509),
                            OperationId = 5L,
                            SectionId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6516),
                            OperationId = 6L,
                            SectionId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6519),
                            OperationId = 7L,
                            SectionId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6665),
                            OperationId = 1L,
                            SectionId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6669),
                            OperationId = 2L,
                            SectionId = 2L
                        },
                        new
                        {
                            Id = 11L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6674),
                            OperationId = 3L,
                            SectionId = 2L
                        },
                        new
                        {
                            Id = 12L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6676),
                            OperationId = 4L,
                            SectionId = 2L
                        },
                        new
                        {
                            Id = 13L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6679),
                            OperationId = 5L,
                            SectionId = 2L
                        },
                        new
                        {
                            Id = 14L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6682),
                            OperationId = 6L,
                            SectionId = 2L
                        },
                        new
                        {
                            Id = 15L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6684),
                            OperationId = 7L,
                            SectionId = 2L
                        },
                        new
                        {
                            Id = 17L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6729),
                            OperationId = 1L,
                            SectionId = 3L
                        },
                        new
                        {
                            Id = 18L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6732),
                            OperationId = 2L,
                            SectionId = 3L
                        },
                        new
                        {
                            Id = 19L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6734),
                            OperationId = 3L,
                            SectionId = 3L
                        },
                        new
                        {
                            Id = 20L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6739),
                            OperationId = 4L,
                            SectionId = 3L
                        },
                        new
                        {
                            Id = 21L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6741),
                            OperationId = 5L,
                            SectionId = 3L
                        },
                        new
                        {
                            Id = 22L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6744),
                            OperationId = 6L,
                            SectionId = 3L
                        },
                        new
                        {
                            Id = 23L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6746),
                            OperationId = 7L,
                            SectionId = 3L
                        },
                        new
                        {
                            Id = 25L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6794),
                            OperationId = 1L,
                            SectionId = 4L
                        },
                        new
                        {
                            Id = 26L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6798),
                            OperationId = 2L,
                            SectionId = 4L
                        },
                        new
                        {
                            Id = 27L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6800),
                            OperationId = 3L,
                            SectionId = 4L
                        },
                        new
                        {
                            Id = 28L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6802),
                            OperationId = 4L,
                            SectionId = 4L
                        },
                        new
                        {
                            Id = 29L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6805),
                            OperationId = 5L,
                            SectionId = 4L
                        },
                        new
                        {
                            Id = 30L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6807),
                            OperationId = 6L,
                            SectionId = 4L
                        },
                        new
                        {
                            Id = 31L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6809),
                            OperationId = 7L,
                            SectionId = 4L
                        },
                        new
                        {
                            Id = 33L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6858),
                            OperationId = 1L,
                            SectionId = 5L
                        },
                        new
                        {
                            Id = 34L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6861),
                            OperationId = 2L,
                            SectionId = 5L
                        },
                        new
                        {
                            Id = 35L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6863),
                            OperationId = 3L,
                            SectionId = 5L
                        },
                        new
                        {
                            Id = 36L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6866),
                            OperationId = 4L,
                            SectionId = 5L
                        },
                        new
                        {
                            Id = 37L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6868),
                            OperationId = 5L,
                            SectionId = 5L
                        },
                        new
                        {
                            Id = 38L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6872),
                            OperationId = 6L,
                            SectionId = 5L
                        },
                        new
                        {
                            Id = 39L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6875),
                            OperationId = 7L,
                            SectionId = 5L
                        },
                        new
                        {
                            Id = 41L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6915),
                            OperationId = 1L,
                            SectionId = 6L
                        },
                        new
                        {
                            Id = 42L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6925),
                            OperationId = 2L,
                            SectionId = 6L
                        },
                        new
                        {
                            Id = 43L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6927),
                            OperationId = 3L,
                            SectionId = 6L
                        },
                        new
                        {
                            Id = 44L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6930),
                            OperationId = 4L,
                            SectionId = 6L
                        },
                        new
                        {
                            Id = 45L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6932),
                            OperationId = 5L,
                            SectionId = 6L
                        },
                        new
                        {
                            Id = 46L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6934),
                            OperationId = 6L,
                            SectionId = 6L
                        },
                        new
                        {
                            Id = 47L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6937),
                            OperationId = 7L,
                            SectionId = 6L
                        },
                        new
                        {
                            Id = 49L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6976),
                            OperationId = 1L,
                            SectionId = 7L
                        },
                        new
                        {
                            Id = 50L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6979),
                            OperationId = 2L,
                            SectionId = 7L
                        },
                        new
                        {
                            Id = 51L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6982),
                            OperationId = 3L,
                            SectionId = 7L
                        },
                        new
                        {
                            Id = 52L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6984),
                            OperationId = 4L,
                            SectionId = 7L
                        },
                        new
                        {
                            Id = 53L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6987),
                            OperationId = 5L,
                            SectionId = 7L
                        },
                        new
                        {
                            Id = 54L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6989),
                            OperationId = 6L,
                            SectionId = 7L
                        },
                        new
                        {
                            Id = 55L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(6991),
                            OperationId = 7L,
                            SectionId = 7L
                        },
                        new
                        {
                            Id = 57L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7032),
                            OperationId = 1L,
                            SectionId = 8L
                        },
                        new
                        {
                            Id = 58L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7035),
                            OperationId = 2L,
                            SectionId = 8L
                        },
                        new
                        {
                            Id = 59L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7038),
                            OperationId = 3L,
                            SectionId = 8L
                        },
                        new
                        {
                            Id = 60L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7040),
                            OperationId = 4L,
                            SectionId = 8L
                        },
                        new
                        {
                            Id = 61L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7042),
                            OperationId = 5L,
                            SectionId = 8L
                        },
                        new
                        {
                            Id = 62L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7045),
                            OperationId = 6L,
                            SectionId = 8L
                        },
                        new
                        {
                            Id = 63L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7047),
                            OperationId = 7L,
                            SectionId = 8L
                        },
                        new
                        {
                            Id = 65L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7096),
                            OperationId = 1L,
                            SectionId = 9L
                        },
                        new
                        {
                            Id = 66L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7099),
                            OperationId = 2L,
                            SectionId = 9L
                        },
                        new
                        {
                            Id = 67L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7101),
                            OperationId = 3L,
                            SectionId = 9L
                        },
                        new
                        {
                            Id = 68L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7103),
                            OperationId = 4L,
                            SectionId = 9L
                        },
                        new
                        {
                            Id = 69L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7105),
                            OperationId = 5L,
                            SectionId = 9L
                        },
                        new
                        {
                            Id = 70L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7108),
                            OperationId = 6L,
                            SectionId = 9L
                        },
                        new
                        {
                            Id = 71L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7110),
                            OperationId = 7L,
                            SectionId = 9L
                        },
                        new
                        {
                            Id = 73L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7152),
                            OperationId = 1L,
                            SectionId = 10L
                        },
                        new
                        {
                            Id = 74L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7155),
                            OperationId = 2L,
                            SectionId = 10L
                        },
                        new
                        {
                            Id = 75L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7159),
                            OperationId = 3L,
                            SectionId = 10L
                        },
                        new
                        {
                            Id = 76L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7162),
                            OperationId = 4L,
                            SectionId = 10L
                        },
                        new
                        {
                            Id = 77L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7164),
                            OperationId = 5L,
                            SectionId = 10L
                        },
                        new
                        {
                            Id = 78L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7167),
                            OperationId = 6L,
                            SectionId = 10L
                        },
                        new
                        {
                            Id = 79L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7169),
                            OperationId = 7L,
                            SectionId = 10L
                        },
                        new
                        {
                            Id = 81L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7217),
                            OperationId = 1L,
                            SectionId = 11L
                        },
                        new
                        {
                            Id = 82L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7219),
                            OperationId = 2L,
                            SectionId = 11L
                        },
                        new
                        {
                            Id = 83L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7222),
                            OperationId = 3L,
                            SectionId = 11L
                        },
                        new
                        {
                            Id = 84L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7224),
                            OperationId = 4L,
                            SectionId = 11L
                        },
                        new
                        {
                            Id = 85L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7227),
                            OperationId = 5L,
                            SectionId = 11L
                        },
                        new
                        {
                            Id = 86L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7229),
                            OperationId = 6L,
                            SectionId = 11L
                        },
                        new
                        {
                            Id = 87L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7231),
                            OperationId = 7L,
                            SectionId = 11L
                        },
                        new
                        {
                            Id = 89L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7271),
                            OperationId = 1L,
                            SectionId = 12L
                        },
                        new
                        {
                            Id = 90L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7274),
                            OperationId = 2L,
                            SectionId = 12L
                        },
                        new
                        {
                            Id = 91L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7276),
                            OperationId = 3L,
                            SectionId = 12L
                        },
                        new
                        {
                            Id = 92L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7278),
                            OperationId = 4L,
                            SectionId = 12L
                        },
                        new
                        {
                            Id = 93L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7281),
                            OperationId = 5L,
                            SectionId = 12L
                        },
                        new
                        {
                            Id = 94L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7283),
                            OperationId = 6L,
                            SectionId = 12L
                        },
                        new
                        {
                            Id = 95L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7286),
                            OperationId = 7L,
                            SectionId = 12L
                        },
                        new
                        {
                            Id = 97L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7330),
                            OperationId = 1L,
                            SectionId = 13L
                        },
                        new
                        {
                            Id = 98L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7332),
                            OperationId = 2L,
                            SectionId = 13L
                        },
                        new
                        {
                            Id = 99L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7335),
                            OperationId = 3L,
                            SectionId = 13L
                        },
                        new
                        {
                            Id = 100L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7337),
                            OperationId = 4L,
                            SectionId = 13L
                        },
                        new
                        {
                            Id = 101L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7340),
                            OperationId = 5L,
                            SectionId = 13L
                        },
                        new
                        {
                            Id = 102L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7342),
                            OperationId = 6L,
                            SectionId = 13L
                        },
                        new
                        {
                            Id = 103L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7345),
                            OperationId = 7L,
                            SectionId = 13L
                        },
                        new
                        {
                            Id = 105L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7386),
                            OperationId = 1L,
                            SectionId = 14L
                        },
                        new
                        {
                            Id = 106L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7389),
                            OperationId = 2L,
                            SectionId = 14L
                        },
                        new
                        {
                            Id = 107L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7391),
                            OperationId = 3L,
                            SectionId = 14L
                        },
                        new
                        {
                            Id = 108L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7393),
                            OperationId = 4L,
                            SectionId = 14L
                        },
                        new
                        {
                            Id = 109L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7396),
                            OperationId = 5L,
                            SectionId = 14L
                        },
                        new
                        {
                            Id = 110L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7398),
                            OperationId = 6L,
                            SectionId = 14L
                        },
                        new
                        {
                            Id = 111L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7400),
                            OperationId = 7L,
                            SectionId = 14L
                        },
                        new
                        {
                            Id = 113L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7446),
                            OperationId = 1L,
                            SectionId = 15L
                        },
                        new
                        {
                            Id = 114L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7449),
                            OperationId = 2L,
                            SectionId = 15L
                        },
                        new
                        {
                            Id = 115L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7451),
                            OperationId = 3L,
                            SectionId = 15L
                        },
                        new
                        {
                            Id = 116L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7454),
                            OperationId = 4L,
                            SectionId = 15L
                        },
                        new
                        {
                            Id = 117L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7456),
                            OperationId = 5L,
                            SectionId = 15L
                        },
                        new
                        {
                            Id = 118L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7458),
                            OperationId = 6L,
                            SectionId = 15L
                        },
                        new
                        {
                            Id = 119L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7461),
                            OperationId = 7L,
                            SectionId = 15L
                        },
                        new
                        {
                            Id = 121L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7501),
                            OperationId = 1L,
                            SectionId = 16L
                        },
                        new
                        {
                            Id = 122L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7504),
                            OperationId = 2L,
                            SectionId = 16L
                        },
                        new
                        {
                            Id = 123L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7506),
                            OperationId = 3L,
                            SectionId = 16L
                        },
                        new
                        {
                            Id = 124L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7509),
                            OperationId = 4L,
                            SectionId = 16L
                        },
                        new
                        {
                            Id = 125L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7511),
                            OperationId = 5L,
                            SectionId = 16L
                        },
                        new
                        {
                            Id = 126L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7513),
                            OperationId = 6L,
                            SectionId = 16L
                        },
                        new
                        {
                            Id = 127L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7516),
                            OperationId = 7L,
                            SectionId = 16L
                        },
                        new
                        {
                            Id = 129L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7558),
                            OperationId = 1L,
                            SectionId = 17L
                        },
                        new
                        {
                            Id = 130L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7561),
                            OperationId = 2L,
                            SectionId = 17L
                        },
                        new
                        {
                            Id = 131L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7563),
                            OperationId = 3L,
                            SectionId = 17L
                        },
                        new
                        {
                            Id = 132L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7565),
                            OperationId = 4L,
                            SectionId = 17L
                        },
                        new
                        {
                            Id = 133L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7573),
                            OperationId = 5L,
                            SectionId = 17L
                        },
                        new
                        {
                            Id = 134L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7576),
                            OperationId = 6L,
                            SectionId = 17L
                        },
                        new
                        {
                            Id = 135L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7578),
                            OperationId = 7L,
                            SectionId = 17L
                        },
                        new
                        {
                            Id = 137L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7800),
                            OperationId = 1L,
                            SectionId = 18L
                        },
                        new
                        {
                            Id = 138L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7803),
                            OperationId = 2L,
                            SectionId = 18L
                        },
                        new
                        {
                            Id = 139L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7806),
                            OperationId = 3L,
                            SectionId = 18L
                        },
                        new
                        {
                            Id = 140L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7808),
                            OperationId = 4L,
                            SectionId = 18L
                        },
                        new
                        {
                            Id = 141L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7811),
                            OperationId = 5L,
                            SectionId = 18L
                        },
                        new
                        {
                            Id = 142L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7813),
                            OperationId = 6L,
                            SectionId = 18L
                        },
                        new
                        {
                            Id = 143L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7816),
                            OperationId = 7L,
                            SectionId = 18L
                        },
                        new
                        {
                            Id = 145L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7858),
                            OperationId = 1L,
                            SectionId = 19L
                        },
                        new
                        {
                            Id = 146L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7861),
                            OperationId = 2L,
                            SectionId = 19L
                        },
                        new
                        {
                            Id = 147L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7863),
                            OperationId = 3L,
                            SectionId = 19L
                        },
                        new
                        {
                            Id = 148L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7873),
                            OperationId = 4L,
                            SectionId = 19L
                        },
                        new
                        {
                            Id = 149L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7876),
                            OperationId = 5L,
                            SectionId = 19L
                        },
                        new
                        {
                            Id = 150L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7878),
                            OperationId = 6L,
                            SectionId = 19L
                        },
                        new
                        {
                            Id = 151L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(7881),
                            OperationId = 7L,
                            SectionId = 19L
                        },
                        new
                        {
                            Id = 153L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8078),
                            OperationId = 1L,
                            SectionId = 20L
                        },
                        new
                        {
                            Id = 154L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8081),
                            OperationId = 2L,
                            SectionId = 20L
                        },
                        new
                        {
                            Id = 155L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8083),
                            OperationId = 3L,
                            SectionId = 20L
                        },
                        new
                        {
                            Id = 156L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8085),
                            OperationId = 4L,
                            SectionId = 20L
                        },
                        new
                        {
                            Id = 157L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8088),
                            OperationId = 5L,
                            SectionId = 20L
                        },
                        new
                        {
                            Id = 158L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8090),
                            OperationId = 6L,
                            SectionId = 20L
                        },
                        new
                        {
                            Id = 159L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8092),
                            OperationId = 7L,
                            SectionId = 20L
                        },
                        new
                        {
                            Id = 161L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8132),
                            OperationId = 1L,
                            SectionId = 21L
                        },
                        new
                        {
                            Id = 162L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8135),
                            OperationId = 2L,
                            SectionId = 21L
                        },
                        new
                        {
                            Id = 163L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8138),
                            OperationId = 3L,
                            SectionId = 21L
                        },
                        new
                        {
                            Id = 164L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8140),
                            OperationId = 4L,
                            SectionId = 21L
                        },
                        new
                        {
                            Id = 165L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8142),
                            OperationId = 5L,
                            SectionId = 21L
                        },
                        new
                        {
                            Id = 166L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8151),
                            OperationId = 6L,
                            SectionId = 21L
                        },
                        new
                        {
                            Id = 167L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8154),
                            OperationId = 7L,
                            SectionId = 21L
                        },
                        new
                        {
                            Id = 169L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8382),
                            OperationId = 1L,
                            SectionId = 22L
                        },
                        new
                        {
                            Id = 170L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8385),
                            OperationId = 2L,
                            SectionId = 22L
                        },
                        new
                        {
                            Id = 171L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8387),
                            OperationId = 3L,
                            SectionId = 22L
                        },
                        new
                        {
                            Id = 172L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8390),
                            OperationId = 4L,
                            SectionId = 22L
                        },
                        new
                        {
                            Id = 173L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8392),
                            OperationId = 5L,
                            SectionId = 22L
                        },
                        new
                        {
                            Id = 174L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8395),
                            OperationId = 6L,
                            SectionId = 22L
                        },
                        new
                        {
                            Id = 175L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8397),
                            OperationId = 7L,
                            SectionId = 22L
                        },
                        new
                        {
                            Id = 177L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8440),
                            OperationId = 1L,
                            SectionId = 23L
                        },
                        new
                        {
                            Id = 178L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8443),
                            OperationId = 2L,
                            SectionId = 23L
                        },
                        new
                        {
                            Id = 179L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8445),
                            OperationId = 3L,
                            SectionId = 23L
                        },
                        new
                        {
                            Id = 180L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8448),
                            OperationId = 4L,
                            SectionId = 23L
                        },
                        new
                        {
                            Id = 181L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8450),
                            OperationId = 5L,
                            SectionId = 23L
                        },
                        new
                        {
                            Id = 182L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8452),
                            OperationId = 6L,
                            SectionId = 23L
                        },
                        new
                        {
                            Id = 183L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8455),
                            OperationId = 7L,
                            SectionId = 23L
                        },
                        new
                        {
                            Id = 185L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8502),
                            OperationId = 1L,
                            SectionId = 24L
                        },
                        new
                        {
                            Id = 186L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8505),
                            OperationId = 2L,
                            SectionId = 24L
                        },
                        new
                        {
                            Id = 187L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8508),
                            OperationId = 3L,
                            SectionId = 24L
                        },
                        new
                        {
                            Id = 188L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8510),
                            OperationId = 4L,
                            SectionId = 24L
                        },
                        new
                        {
                            Id = 189L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8513),
                            OperationId = 5L,
                            SectionId = 24L
                        },
                        new
                        {
                            Id = 190L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8515),
                            OperationId = 6L,
                            SectionId = 24L
                        },
                        new
                        {
                            Id = 191L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8518),
                            OperationId = 7L,
                            SectionId = 24L
                        },
                        new
                        {
                            Id = 193L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8559),
                            OperationId = 1L,
                            SectionId = 25L
                        },
                        new
                        {
                            Id = 194L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8562),
                            OperationId = 2L,
                            SectionId = 25L
                        },
                        new
                        {
                            Id = 195L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8565),
                            OperationId = 3L,
                            SectionId = 25L
                        },
                        new
                        {
                            Id = 196L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8567),
                            OperationId = 4L,
                            SectionId = 25L
                        },
                        new
                        {
                            Id = 197L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8569),
                            OperationId = 5L,
                            SectionId = 25L
                        },
                        new
                        {
                            Id = 198L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8572),
                            OperationId = 6L,
                            SectionId = 25L
                        },
                        new
                        {
                            Id = 199L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8574),
                            OperationId = 7L,
                            SectionId = 25L
                        },
                        new
                        {
                            Id = 201L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8624),
                            OperationId = 1L,
                            SectionId = 26L
                        },
                        new
                        {
                            Id = 202L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8627),
                            OperationId = 2L,
                            SectionId = 26L
                        },
                        new
                        {
                            Id = 203L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8629),
                            OperationId = 3L,
                            SectionId = 26L
                        },
                        new
                        {
                            Id = 204L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8631),
                            OperationId = 4L,
                            SectionId = 26L
                        },
                        new
                        {
                            Id = 205L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8634),
                            OperationId = 5L,
                            SectionId = 26L
                        },
                        new
                        {
                            Id = 206L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8636),
                            OperationId = 6L,
                            SectionId = 26L
                        },
                        new
                        {
                            Id = 207L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8639),
                            OperationId = 7L,
                            SectionId = 26L
                        },
                        new
                        {
                            Id = 209L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8680),
                            OperationId = 1L,
                            SectionId = 27L
                        },
                        new
                        {
                            Id = 210L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8683),
                            OperationId = 2L,
                            SectionId = 27L
                        },
                        new
                        {
                            Id = 211L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8685),
                            OperationId = 3L,
                            SectionId = 27L
                        },
                        new
                        {
                            Id = 212L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8687),
                            OperationId = 4L,
                            SectionId = 27L
                        },
                        new
                        {
                            Id = 213L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8690),
                            OperationId = 5L,
                            SectionId = 27L
                        },
                        new
                        {
                            Id = 214L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8693),
                            OperationId = 6L,
                            SectionId = 27L
                        },
                        new
                        {
                            Id = 215L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8695),
                            OperationId = 7L,
                            SectionId = 27L
                        },
                        new
                        {
                            Id = 217L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8890),
                            OperationId = 1L,
                            SectionId = 28L
                        },
                        new
                        {
                            Id = 218L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(8892),
                            OperationId = 2L,
                            SectionId = 28L
                        },
                        new
                        {
                            Id = 219L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9004),
                            OperationId = 3L,
                            SectionId = 28L
                        },
                        new
                        {
                            Id = 220L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9007),
                            OperationId = 4L,
                            SectionId = 28L
                        },
                        new
                        {
                            Id = 221L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9010),
                            OperationId = 5L,
                            SectionId = 28L
                        },
                        new
                        {
                            Id = 222L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9012),
                            OperationId = 6L,
                            SectionId = 28L
                        },
                        new
                        {
                            Id = 223L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9014),
                            OperationId = 7L,
                            SectionId = 28L
                        },
                        new
                        {
                            Id = 225L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9063),
                            OperationId = 1L,
                            SectionId = 29L
                        },
                        new
                        {
                            Id = 226L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9066),
                            OperationId = 2L,
                            SectionId = 29L
                        },
                        new
                        {
                            Id = 227L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9068),
                            OperationId = 3L,
                            SectionId = 29L
                        },
                        new
                        {
                            Id = 228L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9070),
                            OperationId = 4L,
                            SectionId = 29L
                        },
                        new
                        {
                            Id = 229L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9073),
                            OperationId = 5L,
                            SectionId = 29L
                        },
                        new
                        {
                            Id = 230L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9075),
                            OperationId = 6L,
                            SectionId = 29L
                        },
                        new
                        {
                            Id = 231L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9078),
                            OperationId = 7L,
                            SectionId = 29L
                        },
                        new
                        {
                            Id = 233L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9116),
                            OperationId = 1L,
                            SectionId = 30L
                        },
                        new
                        {
                            Id = 234L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9118),
                            OperationId = 2L,
                            SectionId = 30L
                        },
                        new
                        {
                            Id = 235L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9121),
                            OperationId = 3L,
                            SectionId = 30L
                        },
                        new
                        {
                            Id = 236L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9123),
                            OperationId = 4L,
                            SectionId = 30L
                        },
                        new
                        {
                            Id = 237L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9125),
                            OperationId = 5L,
                            SectionId = 30L
                        },
                        new
                        {
                            Id = 238L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9128),
                            OperationId = 6L,
                            SectionId = 30L
                        },
                        new
                        {
                            Id = 239L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9130),
                            OperationId = 7L,
                            SectionId = 30L
                        },
                        new
                        {
                            Id = 241L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9178),
                            OperationId = 1L,
                            SectionId = 31L
                        },
                        new
                        {
                            Id = 242L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9180),
                            OperationId = 2L,
                            SectionId = 31L
                        },
                        new
                        {
                            Id = 243L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9183),
                            OperationId = 3L,
                            SectionId = 31L
                        },
                        new
                        {
                            Id = 244L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9185),
                            OperationId = 4L,
                            SectionId = 31L
                        },
                        new
                        {
                            Id = 245L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9187),
                            OperationId = 5L,
                            SectionId = 31L
                        },
                        new
                        {
                            Id = 246L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9189),
                            OperationId = 6L,
                            SectionId = 31L
                        },
                        new
                        {
                            Id = 247L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9192),
                            OperationId = 7L,
                            SectionId = 31L
                        },
                        new
                        {
                            Id = 249L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9357),
                            OperationId = 1L,
                            SectionId = 32L
                        },
                        new
                        {
                            Id = 250L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9360),
                            OperationId = 2L,
                            SectionId = 32L
                        },
                        new
                        {
                            Id = 251L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9362),
                            OperationId = 3L,
                            SectionId = 32L
                        },
                        new
                        {
                            Id = 252L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9364),
                            OperationId = 4L,
                            SectionId = 32L
                        },
                        new
                        {
                            Id = 253L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9367),
                            OperationId = 5L,
                            SectionId = 32L
                        },
                        new
                        {
                            Id = 254L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9369),
                            OperationId = 6L,
                            SectionId = 32L
                        },
                        new
                        {
                            Id = 255L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9371),
                            OperationId = 7L,
                            SectionId = 32L
                        },
                        new
                        {
                            Id = 257L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9421),
                            OperationId = 1L,
                            SectionId = 33L
                        },
                        new
                        {
                            Id = 258L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9423),
                            OperationId = 2L,
                            SectionId = 33L
                        },
                        new
                        {
                            Id = 259L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9426),
                            OperationId = 3L,
                            SectionId = 33L
                        },
                        new
                        {
                            Id = 260L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9428),
                            OperationId = 4L,
                            SectionId = 33L
                        },
                        new
                        {
                            Id = 261L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9430),
                            OperationId = 5L,
                            SectionId = 33L
                        },
                        new
                        {
                            Id = 262L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9432),
                            OperationId = 6L,
                            SectionId = 33L
                        },
                        new
                        {
                            Id = 263L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9433),
                            OperationId = 7L,
                            SectionId = 33L
                        },
                        new
                        {
                            Id = 265L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9467),
                            OperationId = 1L,
                            SectionId = 34L
                        },
                        new
                        {
                            Id = 266L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9470),
                            OperationId = 2L,
                            SectionId = 34L
                        },
                        new
                        {
                            Id = 267L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9472),
                            OperationId = 3L,
                            SectionId = 34L
                        },
                        new
                        {
                            Id = 268L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9475),
                            OperationId = 4L,
                            SectionId = 34L
                        },
                        new
                        {
                            Id = 269L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9477),
                            OperationId = 5L,
                            SectionId = 34L
                        },
                        new
                        {
                            Id = 270L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9479),
                            OperationId = 6L,
                            SectionId = 34L
                        },
                        new
                        {
                            Id = 271L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9482),
                            OperationId = 7L,
                            SectionId = 34L
                        },
                        new
                        {
                            Id = 273L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9525),
                            OperationId = 1L,
                            SectionId = 35L
                        },
                        new
                        {
                            Id = 274L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9528),
                            OperationId = 2L,
                            SectionId = 35L
                        },
                        new
                        {
                            Id = 275L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9531),
                            OperationId = 3L,
                            SectionId = 35L
                        },
                        new
                        {
                            Id = 276L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9533),
                            OperationId = 4L,
                            SectionId = 35L
                        },
                        new
                        {
                            Id = 277L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9535),
                            OperationId = 5L,
                            SectionId = 35L
                        },
                        new
                        {
                            Id = 278L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9537),
                            OperationId = 6L,
                            SectionId = 35L
                        },
                        new
                        {
                            Id = 279L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9540),
                            OperationId = 7L,
                            SectionId = 35L
                        },
                        new
                        {
                            Id = 281L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9578),
                            OperationId = 1L,
                            SectionId = 36L
                        },
                        new
                        {
                            Id = 282L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9581),
                            OperationId = 2L,
                            SectionId = 36L
                        },
                        new
                        {
                            Id = 283L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9584),
                            OperationId = 3L,
                            SectionId = 36L
                        },
                        new
                        {
                            Id = 284L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9586),
                            OperationId = 4L,
                            SectionId = 36L
                        },
                        new
                        {
                            Id = 285L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9588),
                            OperationId = 5L,
                            SectionId = 36L
                        },
                        new
                        {
                            Id = 286L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9590),
                            OperationId = 6L,
                            SectionId = 36L
                        },
                        new
                        {
                            Id = 287L,
                            Active = true,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 453, DateTimeKind.Local).AddTicks(9593),
                            OperationId = 7L,
                            SectionId = 36L
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Seller", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("ComissionByProduct")
                        .HasColumnType("bit");

                    b.Property<decimal>("ComissionRate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FixedComission")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ZoneId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ZoneId");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.SequenceControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<short>("Code")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("NumericControl")
                        .HasColumnType("bigint");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SequencesControl");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Code = (short)1,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3494),
                            Name = "Invoices",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Invoices\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Invoices\"}]}]"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Code = (short)2,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3616),
                            Name = "Sellers",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Sellers\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Sellers\"}]}]"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Code = (short)3,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3639),
                            Name = "Customers",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Customers\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Customers\"}]}]"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Code = (short)4,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3669),
                            Name = "Quotes",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Quotes\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Quotes\"}]}]"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Code = (short)5,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3688),
                            Name = "Expenses",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"Expenses\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"Expenses\"}]}]"
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            Code = (short)6,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3709),
                            Name = "WarehouseTransfers",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"WarehouseTransfers\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"WarehouseTransfers\"}]}]"
                        },
                        new
                        {
                            Id = 7L,
                            Active = true,
                            Code = (short)7,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3734),
                            Name = "InventoryIncomes",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"InventoryIncomes\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"InventoryIncomes\"}]}]"
                        },
                        new
                        {
                            Id = 8L,
                            Active = true,
                            Code = (short)8,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3752),
                            Name = "CustomersReturns",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomersReturns\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomersReturns\"}]}]"
                        },
                        new
                        {
                            Id = 9L,
                            Active = true,
                            Code = (short)9,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3769),
                            Name = "SupplierReturns",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"SupplierReturns\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"SupplierReturns\"}]}]"
                        },
                        new
                        {
                            Id = 10L,
                            Active = true,
                            Code = (short)10,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3788),
                            Name = "CustomerPayments",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomerPayments\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"CustomerPayments\"}]}]"
                        },
                        new
                        {
                            Id = 11L,
                            Active = true,
                            Code = (short)11,
                            CreatedBy = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 444, DateTimeKind.Local).AddTicks(3813),
                            Name = "ExpensesPayments",
                            NumericControl = 0L,
                            TranslationData = "[{\"ES\":[{\"PropertyName\":\"Name\",\"Value\":\"ExpensesPayments\"}]},{\"EN\":[{\"PropertyName\":\"Name\",\"Value\":\"ExpensesPayments\"}]}]"
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.SupplierBalance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OwedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SuppliersBalances");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.SupplierReturn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TaxesAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SuppliersReturns");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.TRNControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("NumericControl")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<long>("Sequence")
                        .HasColumnType("bigint");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("TRNsControl");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Tax", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UnitProductEquivalence", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Equivalence")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("UnitProductsEquivalences");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<long?>("BranchOfficeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashRegisterId")
                        .HasColumnType("bigint");

                    b.Property<int>("CashRegisterOpenningTimeHours")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<double?>("Size")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("WarehouseId")
                        .HasColumnType("bigint");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.HasKey("UserId");

                    b.HasIndex("BranchOfficeId");

                    b.HasIndex("CashRegisterId");

                    b.HasIndex("LanguageCode");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("8a2fdd4a-e702-482c-f181-08d7015e3521"),
                            Active = true,
                            Address = "",
                            BirthDay = new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CashRegisterOpenningTimeHours = 0,
                            ContentType = "",
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedByName = "admin",
                            CreatedDate = new DateTime(2019, 12, 30, 17, 9, 4, 454, DateTimeKind.Local).AddTicks(6437),
                            Email = "admin@admin.com",
                            Gender = "M",
                            LanguageCode = "EN",
                            LastName = "admin",
                            Mobile = "8095555555",
                            Name = "admin",
                            Password = "yeLiBgtdL//mX+coUwD6bw==",
                            Phone = "8095555555",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UserClaims", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsersClaims");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UserOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Controllers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OperationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationViewName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperation");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Warehouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("BranchOfficeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.WarehouseMovement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovementType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("WarehousesMovements");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.WarehouseTransfer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("DestinyId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("OriginId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrigingId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UnitId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DestinyId");

                    b.HasIndex("OriginId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("WarehousesTransfers");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Zone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.ReturnDetail", b =>
                {
                    b.HasBaseType("PointOfSalesV2.Entities.InvoiceDetail");

                    b.HasDiscriminator().HasValue("ReturnDetail");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CashRegister", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.BranchOffice", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CashRegisterOpening", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.CashRegister", "CashRegister")
                        .WithMany()
                        .HasForeignKey("CashRegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.BranchOffice", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CompositeProduct", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.UnitProductEquivalence", "UnitProductEquivalence")
                        .WithMany()
                        .HasForeignKey("BaseProductUnitId");

                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany("BaseCompositeProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CreditNote", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Customer", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("AssignedWarehouseId");

                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.TRNControl", "TRNControl")
                        .WithMany()
                        .HasForeignKey("TRNControlId");

                    b.HasOne("PointOfSalesV2.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerBalance", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerPayment", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Currency", "InvoiceCurrency")
                        .WithMany()
                        .HasForeignKey("InvoiceCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Invoice", null)
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("PointOfSalesV2.Entities.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerReturn", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.CustomerReturnDetail", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.CustomerReturn", null)
                        .WithMany("ReturnDetails")
                        .HasForeignKey("CustomerReturnId");

                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Expense", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.BranchOffice", "BranchOffice")
                        .WithMany()
                        .HasForeignKey("BranchOfficeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.ExpenseTax", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Expense", "Expense")
                        .WithMany("Taxes")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.ExpensesPayment", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Currency", "ExpenseCurrency")
                        .WithMany()
                        .HasForeignKey("ExpenseCurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Inventory", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Warehouse")
                        .WithMany("Inventory")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.InventoryEntry", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Invoice", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.BranchOffice", "BranchOffice")
                        .WithMany()
                        .HasForeignKey("BranchOfficeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.HasOne("PointOfSalesV2.Entities.TRNControl", "TNRControl")
                        .WithMany()
                        .HasForeignKey("TRNControlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.InvoiceDetail", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.InvoiceTax", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Invoice", null)
                        .WithMany("Taxes")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.LanguageKey", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.PaymentDetail", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Product", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.ProductTax", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany("Taxes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.RoleSection", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Role", "Role")
                        .WithMany("Sections")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.SectionOperation", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Operation", "Operation")
                        .WithMany("Sections")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Section", "Section")
                        .WithMany("Operations")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Seller", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.SupplierBalance", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.SupplierReturn", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UnitProductEquivalence", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany("ProductUnits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.User", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.BranchOffice", "BranchOffice")
                        .WithMany()
                        .HasForeignKey("BranchOfficeId");

                    b.HasOne("PointOfSalesV2.Entities.CashRegister", "CashRegister")
                        .WithMany()
                        .HasForeignKey("CashRegisterId");

                    b.HasOne("PointOfSalesV2.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode");

                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UserClaims", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.User", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UserOperation", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.User", null)
                        .WithMany("Permissions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.UserRole", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.Warehouse", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.BranchOffice", "BranchOffice")
                        .WithMany("Warehouses")
                        .HasForeignKey("BranchOfficeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.WarehouseMovement", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.BranchOffice", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSalesV2.Entities.WarehouseTransfer", b =>
                {
                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Destiny")
                        .WithMany()
                        .HasForeignKey("DestinyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Warehouse", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId");

                    b.HasOne("PointOfSalesV2.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PointOfSalesV2.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
